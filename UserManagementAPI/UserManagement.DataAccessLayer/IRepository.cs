namespace UserManagement.DataAccessLayer
{
    using System;
    using System.Collections.Generic;
    using System.Linq.Expressions;
    using System.Threading.Tasks;

    public interface IRepository<T> : IDisposable where T : class
    {
        Task<bool> ExistItemAsync(int id);
        Task<T> GetItemAsync(int id, bool ifNotExistsReturnDefaultValue = false);
        Task<IEnumerable<T>> GetItemsAsync(Expression<Func<T, bool>> predicate);
        Task DeleteItemAsync(int id);
        Task<bool> CreateItemAsync(T item);
        Task CreateItemsAsync(List<T> items);

        Task<int> CreateItemAndReturnAutogeneratedIdAsync(T item);
        Task UpdateItemAsync(int id, T item);
        Task UpsertItemAsync(T item);
    }
}
